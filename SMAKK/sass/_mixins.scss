//Display mixins
@mixin display-flex($direction: row, $wrap: nowrap) {
    display: -webkit-box;
    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;
    flex-direction: $direction;
    flex-wrap: $wrap
}

@mixin flex-direction($value: row) {
    @if $value==row-reverse {
        -webkit-box-direction: reverse;
        -webkit-box-orient: horizontal;
    }
    @else if $value==column {
        -webkit-box-direction: normal;
        -webkit-box-orient: vertical;
    }
    @else if $value==column-reverse {
        -webkit-box-direction: reverse;
        -webkit-box-orient: vertical;
    }
    @else {
        -webkit-box-direction: normal;
        -webkit-box-orient: horizontal;
    }
    -webkit-flex-direction: $value;
    -moz-flex-direction: $value;
    -ms-flex-direction: $value;
    flex-direction: $value;
}

//Styles
@mixin borders($border-w, $border-s, $border-c) {
    border: $border-w $border-s $border-c
}

@mixin inline-list() {
    list-style-type: none;
    display: inline-block;
    margin: 0;
    padding: 0
}

//Fonts and Weights
@mixin primary-font-light {
    font-family: $font-primary;
    font-weight: 300
}

@mixin primary-font {
    font-family: $font-primary;
    font-weight: 400
}

@mixin primary-font-semibold {
    font-family: $font-primary;
    font-weight: 600
}

@mixin primary-font-bold {
    font-family: $font-primary;
    font-weight: 700
}

@mixin primary-font-extrabold {
    font-family: $font-primary;
    font-weight: 800
}

//Nav links
@mixin nav-links ($color, $font-size){
    color: $color;
    font-size: $font-size;
    a {
        color: $color;
        text-decoration: none;
        border-bottom: none;
        &:hover {
            border-bottom: none
        }
    }
}

//BUTTONS, TOGGLES
/// Colors for toggles.
/// @type Map
$toggle-colors: ( is-green: $c-green, is-white: #fff, is-blue: $c-blue) !default;
@mixin toggle-item($w, $h) {
    width: $w;
    height: $h;
    border-radius: 50%;
    background: rgba(0, 0, 0, 0);
    border: 2px solid;
    &:hover {
        background-color: map-get($toggle-colors, default);
        @each $color,
        $value in map-remove($toggle-colors, default) {
            &.#{$color} {
                background-color: $value;
            }
        }
    }
}
